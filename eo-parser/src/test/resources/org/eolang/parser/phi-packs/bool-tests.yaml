# SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
object: org.eolang.bool-tests
input: |
  +architect yegor256@gmail.com
  +home https://github.com/objectionary/eo
  +tests
  +package org.eolang
  +version 0.0.0

  # Bool tests.
  [] > bool-tests
    # This unit test is supposed to check the functionality of the corresponding object.
    [] > compares-two-bools
      eq. > @
        true
        true

    # This unit test is supposed to check the functionality of the corresponding object.
    [] > true-as-bool
      true.as-bool > @

    # This unit test is supposed to check the functionality of the corresponding object.
    [] > compares-two-different-types
      not. > @
        eq.
          true
          42

    # This unit test is supposed to check the functionality of the corresponding object.
    [] > compares-bool-to-bytes
      and. > @
        true.eq 01-
        false.eq 00-

    # This unit test is supposed to check the functionality of the corresponding object.
    [] > compares-bool-to-string
      and. > @
        true.eq "\001"
        false.eq "\000"

    # This unit test is supposed to check the functionality of the corresponding object.
    [] > compares-bool-to-bytes-reverse
      and. > @
        01-.as-bytes.eq true
        00-.as-bytes.eq false

sweet: |-
  {⟦
    org ↦ ⟦
      eolang ↦ ⟦
        bool-tests ↦ ⟦
          compares-two-bools ↦ ⟦
            φ ↦ Φ̇.true.eq(Φ̇.true)
          ⟧,
          true-as-bool ↦ ⟦
            φ ↦ Φ̇.true.as-bool
          ⟧,
          compares-two-different-types ↦ ⟦
            φ ↦ Φ̇.true.eq(42).not
          ⟧,
          compares-bool-to-bytes ↦ ⟦
            φ ↦ Φ̇.true.eq(Φ̇.bytes(⟦ Δ ⤍ 01- ⟧)).and(
              Φ̇.false.eq(Φ̇.bytes(⟦ Δ ⤍ 00- ⟧))
            )
          ⟧,
          compares-bool-to-string ↦ ⟦
            φ ↦ Φ̇.true.eq("\u0001").and(Φ̇.false.eq("\u0000"))
          ⟧,
          compares-bool-to-bytes-reverse ↦ ⟦
            φ ↦ Φ̇.bytes(⟦ Δ ⤍ 01- ⟧).as-bytes.eq(Φ̇.true).and(
              Φ̇.bytes(⟦ Δ ⤍ 00- ⟧).as-bytes.eq(Φ̇.false)
            )
          ⟧
        ⟧,
        λ ⤍ Package
      ⟧,
      λ ⤍ Package
    ⟧
  ⟧}
salty: |-
  {
    ⟦
      org ↦ ⟦
        eolang ↦ ⟦
          bool-tests ↦ ⟦
            compares-two-bools ↦ ⟦
              φ ↦ Φ.org.eolang.true.eq(
                α0 ↦ Φ.org.eolang.true
              )
            ⟧,
            true-as-bool ↦ ⟦
              φ ↦ Φ.org.eolang.true.as-bool
            ⟧,
            compares-two-different-types ↦ ⟦
              φ ↦ Φ.org.eolang.true.eq(
                α0 ↦ Φ.org.eolang.number(
                  α0 ↦ Φ.org.eolang.bytes(
                    α0 ↦ ⟦ Δ ⤍ 40-45-00-00-00-00-00-00 ⟧
                  )
                )
              ).not
            ⟧,
            compares-bool-to-bytes ↦ ⟦
              φ ↦ Φ.org.eolang.true.eq(
                α0 ↦ Φ.org.eolang.bytes(
                  α0 ↦ ⟦ Δ ⤍ 01- ⟧
                )
              ).and(
                α0 ↦ Φ.org.eolang.false.eq(
                  α0 ↦ Φ.org.eolang.bytes(
                    α0 ↦ ⟦ Δ ⤍ 00- ⟧
                  )
                )
              )
            ⟧,
            compares-bool-to-string ↦ ⟦
              φ ↦ Φ.org.eolang.true.eq(
                α0 ↦ Φ.org.eolang.string(
                  α0 ↦ Φ.org.eolang.bytes(
                    α0 ↦ ⟦ Δ ⤍ 01- ⟧
                  )
                )
              ).and(
                α0 ↦ Φ.org.eolang.false.eq(
                  α0 ↦ Φ.org.eolang.string(
                    α0 ↦ Φ.org.eolang.bytes(
                      α0 ↦ ⟦ Δ ⤍ 00- ⟧
                    )
                  )
                )
              )
            ⟧,
            compares-bool-to-bytes-reverse ↦ ⟦
              φ ↦ Φ.org.eolang.bytes(
                α0 ↦ ⟦ Δ ⤍ 01- ⟧
              ).as-bytes.eq(
                α0 ↦ Φ.org.eolang.true
              ).and(
                α0 ↦ Φ.org.eolang.bytes(
                  α0 ↦ ⟦ Δ ⤍ 00- ⟧
                ).as-bytes.eq(
                  α0 ↦ Φ.org.eolang.false
                )
              )
            ⟧
          ⟧,
          λ ⤍ Package
        ⟧,
        λ ⤍ Package
      ⟧
    ⟧
  }
