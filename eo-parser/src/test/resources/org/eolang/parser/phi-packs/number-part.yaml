# SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
object: org.eolang.number
input: |
  +package org.eolang
  +alias org.eolang.txt.sprintf

  # The `number` object is an abstraction of a 64-bit floating-point
  [as-bytes] > number
    $.times -1 > neg
sweet: |-
  {⟦
    org ↦ ⟦
      eolang ↦ ⟦
        number(as-bytes) ↦ ⟦
          neg ↦ times(-1)
        ⟧,
        λ ⤍ Package
      ⟧,
      λ ⤍ Package
    ⟧
  ⟧}
salty: |-
  {
    ⟦
      org ↦ ⟦
        eolang ↦ ⟦
          number ↦ ⟦
            as-bytes ↦ ∅,
            neg ↦ ξ.times(
              α0 ↦ Φ.org.eolang.number(
                α0 ↦ Φ.org.eolang.bytes(
                  α0 ↦ ⟦ Δ ⤍ BF-F0-00-00-00-00-00-00 ⟧
                )
              )
            )
          ⟧,
          λ ⤍ Package
        ⟧,
        λ ⤍ Package
      ⟧
    ⟧
  }
